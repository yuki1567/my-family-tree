name: CI

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      id-token: write
      contents: read

    env:
      AWS_VAULT: family-tree-test
      AWS_REGION: ap-northeast-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug GitHub context
        run: |
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event_name: ${{ github.event_name }}"
          echo "GitHub head_ref: ${{ github.head_ref }}"
          echo "GitHub base_ref: ${{ github.base_ref }}"
          echo "GitHub repository: ${{ github.repository }}"
          echo "Expected sub claim: repo:${{ github.repository }}:ref:${{ github.ref }}"

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::797001628348:role/FamilyTreeTestRole
          aws-region: ap-northeast-1
          role-session-name: github-actions-ci-session

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create Docker network
        run: docker network create my-family-tree-shared

      - name: Start Docker containers
        run: docker compose --profile development up -d

      - name: Wait for containers to be ready
        run: sleep 10

      - name: Run lint (Frontend)
        run: npm run lint:frontend

      - name: Run lint (Backend)
        run: npm run lint:backend

      - name: Run type check (Frontend)
        run: npm run type-check:frontend

      - name: Run type check (Backend)
        run: npm run type-check:backend

      - name: Build frontend
        run: npm run build:frontend

      - name: Build backend
        run: npm run build:backend

      - name: Run tests (Frontend)
        run: npm run test:frontend

      - name: Debug test-db container
        run: |
          docker compose --profile test up -d test-db
          sleep 5
          echo "=== Container status ==="
          docker ps -a | grep test-db
          echo "=== Container logs ==="
          docker logs test-db
          echo "=== Port mapping ==="
          docker port test-db
          echo "=== Network connectivity test ==="
          nc -zv 127.0.0.1 5433 || echo "Port 5433 not reachable"
          docker compose --profile test down

      - name: Run tests (Backend)
        run: npm run test:backend

      - name: Stop Docker containers
        if: always()
        run: docker compose down
